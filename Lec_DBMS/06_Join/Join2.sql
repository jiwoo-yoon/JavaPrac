--비등가 조인(Non-Equi Join)

SELECT * FROM T_CUSTOMER;
SELECT * FROM T_GIFT;

--#6201
SELECT C.C_NAME , C.C_POINT , G.G_NAME
FROM T_CUSTOMER C, T_GIFT G
WHERE C.C_POINT BETWEEN G.G_START AND G.G_END 
;

SELECT C.C_NAME , C.C_POINT , G.G_NAME
FROM T_CUSTOMER C JOIN T_GIFT G
ON C.C_POINT BETWEEN G.G_START AND G.G_END
;

--#6202
SELECT G.G_NAME, COUNT(G.G_NAME) 
FROM T_CUSTOMER C, T_GIFT G
WHERE C.C_POINT BETWEEN G.G_START AND G.G_END
GROUP BY G.G_NAME
;

SELECT G.G_NAME, COUNT(G.G_NAME)
FROM T_CUSTOMER C JOIN T_GIFT G
ON C.C_POINT BETWEEN G.G_START AND G.G_END
GROUP BY G.G_NAME
;

--#6203
SELECT S.NAME , E.TOTAL , C.GRADE
FROM T_STUDENT S, T_EXAM01 E, T_CREDIT C
WHERE S.STUDNO = E.STUDNO AND E.TOTAL BETWEEN C.MIN_POINT AND C.MAX_POINT
ORDER BY C.GRADE ASC
;

SELECT S.NAME , E.TOTAL , C.GRADE 
FROM T_STUDENT S
	JOIN T_EXAM01 E ON S.STUDNO = E.STUDNO
	JOIN T_CREDIT C ON E.TOTAL BETWEEN C.MIN_POINT AND C.MAX_POINT
ORDER BY C.GRADE ASC 
;

--#6204
SELECT * FROM T_GIFT;

SELECT C.C_NAME , C.C_POINT , G.G_NAME 
FROM T_CUSTOMER C, T_GIFT G
WHERE C.C_POINT >= G.G_START AND G.G_START = 400001
;

SELECT C.C_NAME , C.C_POINT , G.G_NAME 
FROM T_CUSTOMER C JOIN T_GIFT G
	ON C.C_POINT >= G.G_START AND G.G_NO = 5
	;

--#6205
SELECT * FROM T_EMP2;
SELECT * FROM T_POST;

SELECT E.NAME,
	(TO_CHAR(SYSDATE, 'YYYY') - TO_CHAR(E.BIRTHDAY, 'YYYY')+1) "현재나이",
	NVL(E.POST, ' ') "현재직급",
	P.POST "예상직급"
FROM T_EMP2 E, T_POST P
WHERE (TO_CHAR(SYSDATE, 'YYYY') - TO_CHAR(E.BIRTHDAY, 'YYYY')+1)
	BETWEEN P.S_AGE AND P.E_AGE 
;

SELECT E.NAME,
	(TO_CHAR(SYSDATE, 'YYYY') - TO_CHAR(E.BIRTHDAY, 'YYYY')+1) "현재나이",
	NVL(E.POST, ' ') "현재직급",
	P.POST "예상직급"
FROM T_EMP2 E JOIN T_POST P
	ON (TO_CHAR(SYSDATE, 'YYYY') - TO_CHAR(E.BIRTHDAY, 'YYYY')+1)
	BETWEEN P.S_AGE AND P.E_AGE
;

--#6206
SELECT S.NAME , P.NAME 
FROM T_STUDENT S LEFT OUTER JOIN T_PROFESSOR P
	ON S.PROFNO = P.PROFNO 
;

--#6207
SELECT S.NAME , P.NAME 
FROM T_STUDENT S RIGHT OUTER JOIN T_PROFESSOR P
	ON S.PROFNO = P.PROFNO 
;

--#6208
SELECT S.NAME , P.NAME 
FROM T_STUDENT S FULL OUTER JOIN T_PROFESSOR P
	ON S.PROFNO = P.PROFNO 
;

--SELF Join
SELECT D1.DNAME , D2.DNAME 
FROM T_DEPT2 D1 , T_DEPT2 D2
WHERE D1.PDEPT = D2.DCODE 
;

SELECT D1.DNAME , D2.DNAME 
FROM T_DEPT2 D1 JOIN T_DEPT2 D2
	ON D1.PDEPT = D2.DCODE 
;


--#6210
SELECT P1.PROFNO "교수번호", P1.NAME "교수명", 
	TO_CHAR(P1.HIREDATE, 'YYYY-MM-DD') "입사일", COUNT(P2.HIREDATE) "빠른사람"
FROM T_PROFESSOR P1 LEFT OUTER JOIN T_PROFESSOR P2
	ON P1.HIREDATE > P2.HIREDATE 
GROUP BY P1.PROFNO , P1.NAME , P1.HIREDATE 
ORDER BY COUNT(P2.HIREDATE) ASC
	;
